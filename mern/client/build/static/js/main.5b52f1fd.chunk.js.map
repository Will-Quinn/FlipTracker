{"version":3,"sources":["components/assets/logo.png","components/assets/pillarLeft.png","components/assets/pillarRight.png","components/navbar.js","components/recordList.js","components/edit.js","components/create.js","App.js","index.js"],"names":["Navbar","className","alt","style","src","pillarLeft","class","to","logo","href","type","pillarRight","Record","props","record","ItemName","BuyPrice","Quantity","SellPrice","Tax","IncleTax","Profit","_id","onClick","deleteRecord","RecordList","useState","records","setRecords","id","a","fetch","method","newRecords","filter","el","useEffect","response","ok","message","statusText","window","alert","json","getRecords","length","marginTop","marginLeft","marginBottom","marginRight","sum","i","color","margin","textAlign","sumProfit","width","map","Edit","form","setForm","params","useParams","navigate","useNavigate","updateForm","value","prev","e","preventDefault","editedFlip","body","JSON","stringify","headers","Calc","tax","document","getElementById","taxRounded","Math","round","innerHTML","pwTax","pwTaxRounded","parseInt","profit","profitRounded","toString","fetchData","onSubmit","htmlFor","onChange","target","onKeyUp","Create","newFlip","catch","error","App","exact","path","element","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5b52f1fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c03259be.png\";","export default __webpack_public_path__ + \"static/media/pillarLeft.9e108f28.png\";","export default __webpack_public_path__ + \"static/media/pillarRight.64d54cce.png\";","import React from \"react\";\nimport logo from \"./assets/logo.png\";\nimport pillarLeft from \"./assets/pillarLeft.png\";\nimport pillarRight from \"./assets/pillarRight.png\";\n// We import bootstrap to make our application look better.\nimport './assets/styles.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './assets/styles.css';\n// We import NavLink to utilize the react router.\nimport { NavLink } from \"react-router-dom\";\n\n// Here, we display our Navbar\nexport default function Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n        <img alt=\"left pillar\" style={{\"width\" : 8 + '%', \"left\" : \"0\"}} src={pillarLeft}></img>\n        <div class=\"flex-container\" style={{\"margin\" : \"auto\"}}>\n          <div class=\"flex-items\">\n        <NavLink to=\"/\" >\n        <img alt=\"logo\"style={{\"width\" : 17 + '%', \"margin-left\" : \"41.5%\"}} src={logo}></img>\n        </NavLink>\n          </div>\n          <div class=\"flex-items\">\n          <a href=\"/create\" style={{\"margin\" : \"auto\"}}>\n              <button type=\"button\" class=\"btn btn-light\" >Enter Flip</button>\n          </a>             \n          </div>\n        </div>          \n        <img alt=\"right pillar\" style={{\"width\" : 8 + '%', \"right\" : \"0\"}} src={pillarRight}></img>\n      </nav>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './assets/styles.css';\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.ItemName}</td>\n    <td>ㅤㅤ{props.record.BuyPrice}</td>\n    <td>ㅤㅤ{props.record.Quantity}</td>\n    <td>ㅤㅤㅤ{props.record.SellPrice}</td>\n    <td>ㅤ{props.record.Tax}</td>\n    <td>ㅤㅤㅤㅤㅤㅤㅤ{props.record.IncleTax}</td>\n    <td>ㅤㅤ{props.record.Profit}</td>\n    <td>\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n      <button className=\"btn btn-link\"\n        onClick={() => {\n          props.deleteRecord(props.record._id);\n        }}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nexport default function RecordList() {\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n\n    return; \n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n\n    const newRecords = records.filter((el) => el._id !== id);\n    setRecords(newRecords);\n  }\n\n  // This method will map out the records on the table\n  function recordList() {\n    return records.map((record) => {\n      return (\n        <Record\n          record={record}\n          deleteRecord={() => deleteRecord(record._id)}\n          key={record._id}\n        />\n      );\n    });\n  }\n//get props.record.Profit from the database and sums all the profits, if sum is < 0 id=\"earnings\" style.color=\"green\" else id=\"losses\" style.color=\"red\"\n  function sumProfit() {\n    let sum = 0;\n    for (let i = 0; i < records.length; i++) {\n      sum += records[i].Profit;\n    }\n    if (sum === 0) {\n      return <h3 id=\"even\" style={{ color: \"gold\", margin: \"auto\", textAlign: \"center\"}}>{sum + \"\"}</h3>;\n    } else if (sum > 0) {\n      return <h3 id=\"earnings\" style={{ color: \"green\", margin: \"auto\", textAlign: \"center\"}}>{sum + \" ↑\"}</h3>;\n    } else {\n        return <h3 id=\"losses\" style={{ color: \"red\", margin: \"auto\", textAlign: \"center\"}}>{sum + \" ↓\"}</h3>;\n    }\n  }\n\n\n\n  // This following section will display the table with the records of individuals.\n  return (\n    <div>\n      <div style={{ \"clear\": \"both\"}}>\n      <h2 style={{\"float\": \"left\", marginTop: \"1.5%\",marginLeft: \"5%\"  }}>Flip Log</h2>\n      <h3 id=\"earnings\" style={{\"float\": \"right\", marginBottom: \"2%\", marginTop: \"1%\",marginRight: \"5%\"    }}>Total Earnings: {sumProfit()}</h3>\n      </div>\n      <table className=\"table table-striped\" style={{marginLeft: \"-1%\", width: \"103%\"}}>\n        <thead>\n          <tr>\n            <th>Item Name</th>\n            <th>Buy Price</th>\n            <th>Quantity</th>\n            <th>Sell Price</th>\n            <th>ㅤTax</th>\n            <th>Profit (incl. Tax)</th>\n            <th>Total Profit</th>\n            <th>ㅤㅤㅤㅤActions</th>\n          </tr>\n        </thead>\n        <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    ItemName: \"\",\n    BuyPrice: \"\",\n    Quantity: \"\",\n    SellPrice: \"\",\n    Tax: \"\",\n    Profit: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedFlip = {\n    ItemName: form.ItemName,\n    BuyPrice: form.BuyPrice,\n    Quantity: form.Quantity,\n    SellPrice: form.SellPrice,\n    Tax: form.Tax,\n    IncleTax: form.IncleTax,\n    Profit: form.Profit,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedFlip),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(\"/\");\n  }\n  function Calc() {\n\n    var tax = document.getElementById(\"Tax\");\n    var taxRounded = Math.round(form.SellPrice * 0.01);\n    tax.innerHTML = \"Tax: -\" + taxRounded;\n    form.Tax =\"-\" +  Math.round(form.SellPrice * 0.01);\n\n    var pwTax = document.getElementById(\"IncleTax\");\n    var pwTaxRounded = Math.round(form.SellPrice - form.BuyPrice + parseInt(form.Tax));\n    form.IncleTax = Math.round(form.SellPrice - form.BuyPrice + parseInt(form.Tax));\n    pwTax.innerHTML = \"Profit (incl. Tax): \" + pwTaxRounded;\n\n    var profit = document.getElementById(\"Profit\");\n    var profitRounded = Math.round(pwTaxRounded * form.Quantity);\n    profit.innerHTML = \"Total Profit: \" + profitRounded;\n    form.Profit = profitRounded;\n\n  }\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div style={{\"width\" : \"35%\", \"margin\": \"auto\"}}>\n      <h3 style={{\"margin-left\": \"20%\"}}>Update Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"ItemName\">Item name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"ItemName\"\n            value={form.ItemName}\n            onChange={(e) => updateForm({ ItemName: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"BuyPrice\">Buy price: </label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            id=\"BuyPrice\"\n            value={form.BuyPrice}\n            onKeyUp={Calc}            \n            onChange={(e) => updateForm({ BuyPrice: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"Quantity\">Quantity: </label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            id=\"Quantity\"\n            value={form.Quantity}\n            onKeyUp={Calc}\n            onChange={(e) => updateForm({ Quantity: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"SellPrice\">Sell price: </label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            id=\"SellPrice\"\n            value={form.SellPrice}\n            onKeyUp={Calc}\n            onChange={(e) => updateForm({ SellPrice: e.target.value })}\n          />\n        </div>\n        <div class=\"flex-containerCalcs\">\n          <div class=\"flex-itemsCalcs\">\n            <text id=\"Tax\">Tax: </text>\n          </div>\n          <div class=\"flex-itemsCalcs\"><br></br>\n            <text id=\"IncleTax\">Profit (incl. Tax): </text>\n          </div>\n          <div class=\"flex-itemsCalcs\"><br></br>\n            <text id=\"Profit\">Total Profit: </text>\n          </div>\n        </div>     \n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Flip\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    ItemName: \"\",\n    BuyPrice: \"\",\n    Quantity: \"\",\n    SellPrice: \"\",\n    Tax: \"\",\n    IncleTax: \"\",\n    Profit: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n\n  \n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newFlip = { ...form };\n\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newFlip),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ItemName: \"\", BuyPrice: \"\", Quantity: \"\", SellPrice: \"\", Tax: \"\",IncleTax: \"\", Profit: \"\"});\n    navigate(\"/\");\n  }\n  //function that calculates the profit including tax\n\n  function Calc() {\n\n    var tax = document.getElementById(\"tax\");\n    var taxRounded = Math.round(form.SellPrice * 0.01);\n    tax.innerHTML = \"Tax: -\" + taxRounded;\n    form.Tax =\"-\" +  Math.round(form.SellPrice * 0.01);\n\n    var pwTax = document.getElementById(\"IncleTax\");\n    var pwTaxRounded = Math.round(form.SellPrice - form.BuyPrice + parseInt(form.Tax));\n    form.IncleTax = Math.round(form.SellPrice - form.BuyPrice + parseInt(form.Tax));\n    pwTax.innerHTML = \"Profit (incl. Tax): \" + pwTaxRounded;\n\n    var profit = document.getElementById(\"profit\");\n    var profitRounded = Math.round(pwTaxRounded * form.Quantity);\n    profit.innerHTML = \"Total Profit: \" + profitRounded;\n    form.Profit = profitRounded;\n\n  }\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div style={{\"width\" : \"35%\", \"margin\": \"auto\"}}>\n      <h3 style={{\"margin-left\": \"20%\"}}>Enter your flip</h3><br></br>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"ItemName\">Item Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control ItemName\"\n            id=\"ItemName\"\n            value={form.ItemName}\n            onChange={(e) => updateForm({ ItemName: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"BuyPrice\">Buy Price(gp)</label>\n          <input\n            type=\"number\"\n            className=\"form-control BuyPrice\"\n            id=\"BuyPrice\"\n            value={form.BuyPrice}\n            onKeyUp={Calc}\n            onChange={(e) => updateForm({ BuyPrice: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"Quantity\">Quantity</label>\n          <input\n            type=\"number\"\n            className=\"form-control Quantity\"\n            id=\"Quantity\"\n            value={form.Quantity}\n            onKeyUp={Calc}\n            onChange={(e) => updateForm({ Quantity: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"SellPrice\">Sell Price(gp)</label>\n          <input\n            type=\"number\"\n            className=\"form-control SellPrice\"\n            id=\"SellPrice\"\n            value={form.SellPrice}\n            onKeyUp={Calc}\n            onChange={(e) => updateForm({ SellPrice: e.target.value })}\n          />\n        </div>\n        <div class=\"flex-containerCalcs\">\n          <div class=\"flex-itemsCalcs\">\n            <text id=\"tax\">Tax: </text>\n          </div>\n          <div class=\"flex-itemsCalcs\"><br></br>\n            <text id=\"IncleTax\">Profit (incl. Tax): </text>\n          </div>\n          <div class=\"flex-itemsCalcs\"><br></br>\n            <text id=\"profit\">Total Profit: </text>\n          </div>\n        </div>\n        <div className=\"form-group\"><br></br>\n          <input\n            type=\"submit\"\n            value=\"Log flip\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <div style={{ margin: 20 }}>\n      <Routes>\n        <Route exact path=\"/\" element={<RecordList />} />\n        <Route path=\"/edit/:id\" element={<Edit />} />\n        <Route path=\"/create\" element={<Create />} />\n      </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}