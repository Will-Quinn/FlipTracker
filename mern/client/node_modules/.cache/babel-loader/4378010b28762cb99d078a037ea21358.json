{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\proto\\\\OneDrive\\\\Documents\\\\GitHub\\\\FlipTracker\\\\mern\\\\client\\\\src\\\\components\\\\edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n\n  const [form, setForm] = useState({\n    ItemName: \"\",\n    BuyPrice: \"\",\n    Quantity: \"\",\n    SellPrice: \"\",\n    Tax: \"\",\n    Profit: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate]); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedFlip = {\n      ItemName: form.ItemName,\n      BuyPrice: form.BuyPrice,\n      Quantity: form.Quantity,\n      SellPrice: form.SellPrice,\n      Tax: form.Tax,\n      IncleTax: form.IncleTax,\n      Profit: form.Profit\n    }; // This will send a post request to update the data in the database.\n\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedFlip),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  }\n\n  function Calc() {\n    var tax = document.getElementById(\"Tax\");\n    var taxRounded = Math.round(form.SellPrice * 0.01);\n    tax.innerHTML = \"Tax: -\" + taxRounded;\n    form.Tax = \"-\" + Math.round(form.SellPrice * 0.01);\n    var pwTax = document.getElementById(\"IncleTax\");\n    var pwTaxRounded = Math.round(form.SellPrice - form.BuyPrice + parseInt(form.Tax));\n    form.IncleTax = Math.round(form.SellPrice - form.BuyPrice + parseInt(form.Tax));\n    pwTax.innerHTML = \"Profit (incl. Tax): \" + pwTaxRounded;\n    var profit = document.getElementById(\"Profit\");\n    var profitRounded = Math.round(pwTaxRounded * form.Quantity);\n    profit.innerHTML = \"Total Profit: \" + profitRounded;\n    form.Profit = profitRounded;\n  } // This following section will display the form that takes input from the user to update the data.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"width\": \"35%\",\n      \"margin\": \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        \"margin-left\": \"20%\"\n      },\n      children: \"Update Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ItemName\",\n          children: \"Item name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"ItemName\",\n          value: form.ItemName,\n          onChange: e => updateForm({\n            ItemName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"BuyPrice\",\n          children: \"Buy price: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"BuyPrice\",\n          value: form.BuyPrice,\n          onKeyUp: Calc,\n          onChange: e => updateForm({\n            BuyPrice: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Quantity\",\n          children: \"Quantity: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"Quantity\",\n          value: form.Quantity,\n          onKeyUp: Calc,\n          onChange: e => updateForm({\n            Quantity: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"SellPrice\",\n          children: \"Sell price: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"SellPrice\",\n          value: form.SellPrice,\n          onKeyUp: Calc,\n          onChange: e => updateForm({\n            SellPrice: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex-containerCalcs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flex-itemsCalcs\",\n          children: /*#__PURE__*/_jsxDEV(\"text\", {\n            id: \"Tax\",\n            children: \"Tax: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flex-itemsCalcs\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            id: \"IncleTax\",\n            children: \"Profit (incl. Tax): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flex-itemsCalcs\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            id: \"Profit\",\n            children: \"Total Profit: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Flip\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"EY8jqc1iDE6oTSXA+CAKs0fcsrE=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["C:/Users/proto/OneDrive/Documents/GitHub/FlipTracker/mern/client/src/components/edit.js"],"names":["React","useState","useEffect","useParams","useNavigate","Edit","form","setForm","ItemName","BuyPrice","Quantity","SellPrice","Tax","Profit","records","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","updateForm","value","prev","onSubmit","e","preventDefault","editedFlip","IncleTax","method","body","JSON","stringify","headers","Calc","tax","document","getElementById","taxRounded","Math","round","innerHTML","pwTax","pwTaxRounded","parseInt","profit","profitRounded","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    ItemName: \"\",\n    BuyPrice: \"\",\n    Quantity: \"\",\n    SellPrice: \"\",\n    Tax: \"\",\n    Profit: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedFlip = {\n    ItemName: form.ItemName,\n    BuyPrice: form.BuyPrice,\n    Quantity: form.Quantity,\n    SellPrice: form.SellPrice,\n    Tax: form.Tax,\n    IncleTax: form.IncleTax,\n    Profit: form.Profit,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedFlip),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(\"/\");\n  }\n  function Calc() {\n\n    var tax = document.getElementById(\"Tax\");\n    var taxRounded = Math.round(form.SellPrice * 0.01);\n    tax.innerHTML = \"Tax: -\" + taxRounded;\n    form.Tax =\"-\" +  Math.round(form.SellPrice * 0.01);\n\n    var pwTax = document.getElementById(\"IncleTax\");\n    var pwTaxRounded = Math.round(form.SellPrice - form.BuyPrice + parseInt(form.Tax));\n    form.IncleTax = Math.round(form.SellPrice - form.BuyPrice + parseInt(form.Tax));\n    pwTax.innerHTML = \"Profit (incl. Tax): \" + pwTaxRounded;\n\n    var profit = document.getElementById(\"Profit\");\n    var profitRounded = Math.round(pwTaxRounded * form.Quantity);\n    profit.innerHTML = \"Total Profit: \" + profitRounded;\n    form.Profit = profitRounded;\n\n  }\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div style={{\"width\" : \"35%\", \"margin\": \"auto\"}}>\n      <h3 style={{\"margin-left\": \"20%\"}}>Update Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"ItemName\">Item name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"ItemName\"\n            value={form.ItemName}\n            onChange={(e) => updateForm({ ItemName: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"BuyPrice\">Buy price: </label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            id=\"BuyPrice\"\n            value={form.BuyPrice}\n            onKeyUp={Calc}            \n            onChange={(e) => updateForm({ BuyPrice: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"Quantity\">Quantity: </label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            id=\"Quantity\"\n            value={form.Quantity}\n            onKeyUp={Calc}\n            onChange={(e) => updateForm({ Quantity: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"SellPrice\">Sell price: </label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            id=\"SellPrice\"\n            value={form.SellPrice}\n            onKeyUp={Calc}\n            onChange={(e) => updateForm({ SellPrice: e.target.value })}\n          />\n        </div>\n        <div class=\"flex-containerCalcs\">\n          <div class=\"flex-itemsCalcs\">\n            <text id=\"Tax\">Tax: </text>\n          </div>\n          <div class=\"flex-itemsCalcs\"><br></br>\n            <text id=\"IncleTax\">Profit (incl. Tax): </text>\n          </div>\n          <div class=\"flex-itemsCalcs\"><br></br>\n            <text id=\"Profit\">Total Profit: </text>\n          </div>\n        </div>     \n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Flip\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}